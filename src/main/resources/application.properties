# ===================================================================
# SPRING BOOT CONFIGURATION
# ===================================================================
spring.application.name=ecommerce-backend
server.port=8080

# ACTIVATE DEV PROFILE BY DEFAULT
spring.profiles.active=dev

# ===================================================================
# DATABASE CONFIGURATION - MongoDB
# ===================================================================
spring.data.mongodb.uri=${MONGODB_URI:mongodb+srv://mininduabeywardena:Minindu123@cluster0.uzvrja0.mongodb.net/Ecommerce?retryWrites=true&w=majority}
spring.data.mongodb.database=${MONGODB_DATABASE:ecommerce}

# ===================================================================
# JWT Configuration for local authentication
# ===================================================================
jwt.secret=${JWT_SECRET:mySecretKey1234567890123456789012345678901234567890abcdefghijklmnopqrstuvwxyz}
jwt.expiration=${JWT_EXPIRATION:86400000}

# ===================================================================
# CORS CONFIGURATION
# ===================================================================
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,https://localhost:3000}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true

# ===================================================================
# ASGARDEO OAUTH2 / OIDC CONFIGURATION
# ===================================================================
# Environment variables for Asgardeo configuration
# Set ASGARDEO_ORG_NAME, ASGARDEO_CLIENT_ID, ASGARDEO_CLIENT_SECRET in your environment
asgardeo.org-name=${ASGARDEO_ORG_NAME:}
asgardeo.client-id=${ASGARDEO_CLIENT_ID:}
# asgardeo.client-secret=${ASGARDEO_CLIENT_SECRET:}

# JWT Resource Server Configuration for Asgardeo
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://api.asgardeo.io/t/${asgardeo.org-name}/oauth2/token
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://api.asgardeo.io/t/${asgardeo.org-name}/oauth2/jwks

# OAuth2 Client Configuration (for potential future use)
spring.security.oauth2.client.registration.asgardeo.client-id=${asgardeo.client-id}
# spring.security.oauth2.client.registration.asgardeo.client-secret=${asgardeo.client-secret}
spring.security.oauth2.client.registration.asgardeo.scope=openid,profile,email,phone
spring.security.oauth2.client.registration.asgardeo.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.asgardeo.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

spring.security.oauth2.client.provider.asgardeo.authorization-uri=https://api.asgardeo.io/t/${asgardeo.org-name}/oauth2/authorize
spring.security.oauth2.client.provider.asgardeo.token-uri=https://api.asgardeo.io/t/${asgardeo.org-name}/oauth2/token
spring.security.oauth2.client.provider.asgardeo.user-info-uri=https://api.asgardeo.io/t/${asgardeo.org-name}/oauth2/userinfo
spring.security.oauth2.client.provider.asgardeo.jwk-set-uri=https://api.asgardeo.io/t/${asgardeo.org-name}/oauth2/jwks
spring.security.oauth2.client.provider.asgardeo.user-name-attribute=sub

# ===================================================================
# SECURITY CONFIGURATION
# ===================================================================


spring.session.store-type=none

# ===================================================================
# API DOCUMENTATION - Swagger/OpenAPI
# ===================================================================
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.try-it-out-enabled=true

# ===================================================================
# RATE LIMITING CONFIGURATION
# ===================================================================
ratelimit.capacity=${RATE_LIMIT_CAPACITY:100}
ratelimit.refill-tokens=${RATE_LIMIT_REFILL:10}
ratelimit.refill-duration-seconds=${RATE_LIMIT_DURATION:1}

# ===================================================================
# LOGGING CONFIGURATION
# ===================================================================
logging.level.org.springframework=INFO
logging.level.com.ecommerce=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=INFO

logging.file.name=logs/ecommerce-backend.log
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.total-size-cap=100MB

# ===================================================================
# JACKSON JSON CONFIGURATION
# ===================================================================
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC
spring.jackson.default-property-inclusion=NON_NULL

# ===================================================================
# VALIDATION CONFIGURATION
# ===================================================================
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# ===================================================================
# ACTUATOR ENDPOINTS (for health monitoring)
# ===================================================================
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when_authorized
management.health.mongo.enabled=true

# ===================================================================
# APPLICATION SPECIFIC CONFIGURATION
# ===================================================================
app.name=E-Commerce Backend
app.version=1.0.0
app.description=Secure E-Commerce Backend with Asgardeo OIDC Authentication

app.max-order-quantity=100
app.max-cart-items=50

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

