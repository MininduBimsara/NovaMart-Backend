# ===================================================================
# SPRING BOOT CONFIGURATION
# ===================================================================
spring.application.name=ecommerce-backend
server.port=8080

# Enable HTTPS (for production)
# server.ssl.enabled=true
# server.ssl.key-store=classpath:keystore.p12
# server.ssl.key-store-password=changeit
# server.ssl.key-store-type=PKCS12

# ===================================================================
# DATABASE CONFIGURATION - MongoDB
# ===================================================================
spring.data.mongodb.uri=mongodb+srv://mininduabeywardena:Minindu123@cluster0.uzvrja0.mongodb.net/Ecommerce?retryWrites=true&w=majority
spring.data.mongodb.database=ecommerce

# MongoDB connection pool settings
spring.data.mongodb.min-connections-per-host=10
spring.data.mongodb.max-connections-per-host=100
spring.data.mongodb.max-wait-time=5000

# ===================================================================
# OAUTH2 / OIDC CONFIGURATION
# ===================================================================
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://api.asgardeo.io/t/your-org/oauth2/token

oauth2.client.client-id=${OAUTH2_CLIENT_ID:your-client-id}
oauth2.client.client-secret=${OAUTH2_CLIENT_SECRET:your-client-secret}
oauth2.client.scope=${OAUTH2_SCOPE:openid,profile,email}

# ===================================================================
# SECURITY CONFIGURATION
# ===================================================================
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,https://localhost:3000}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true

spring.session.store-type=none

# ===================================================================
# API DOCUMENTATION - Swagger/OpenAPI
# ===================================================================
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.try-it-out-enabled=true

# ===================================================================
# RATE LIMITING CONFIGURATION
# ===================================================================
ratelimit.capacity=${RATE_LIMIT_CAPACITY:100}
ratelimit.refill-tokens=${RATE_LIMIT_REFILL:10}
ratelimit.refill-duration-seconds=${RATE_LIMIT_DURATION:1}

# ===================================================================
# LOGGING CONFIGURATION
# ===================================================================
logging.level.org.springframework=INFO
logging.level.com.ecommerce=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=INFO

logging.file.name=logs/ecommerce-backend.log
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.total-size-cap=100MB

# ===================================================================
# JACKSON JSON CONFIGURATION
# ===================================================================
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC
spring.jackson.default-property-inclusion=NON_NULL

# ===================================================================
# VALIDATION CONFIGURATION
# ===================================================================
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# ===================================================================
# ACTUATOR ENDPOINTS (for health monitoring)
# ===================================================================
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when_authorized
management.health.mongo.enabled=true

# ===================================================================
# APPLICATION SPECIFIC CONFIGURATION
# ===================================================================
app.name=E-Commerce Backend
app.version=1.0.0
app.description=Secure E-Commerce Backend with OIDC Authentication

app.max-order-quantity=100
app.max-cart-items=50

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# ===================================================================
# ENVIRONMENT SPECIFIC OVERRIDES
# ===================================================================

# For dev, prod, and test profiles, create separate files:
# application-dev.properties
# application-prod.properties
# application-test.properties

# Example: application-dev.properties
# logging.level.com.ecommerce=DEBUG
# spring.data.mongodb.uri=mongodb://localhost:27017/ecommerce-dev

# Example: application-prod.properties
# logging.level.com.ecommerce=INFO
# logging.level.org.springframework.security=WARN
# server.ssl.enabled=true
# spring.data.mongodb.uri=${DATABASE_URL:mongodb://localhost:27017/ecommerce-prod}

# Example: application-test.properties
# spring.data.mongodb.uri=mongodb://localhost:27017/ecommerce-test
# logging.level.com.ecommerce=WARN
